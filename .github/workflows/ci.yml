name: CI

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Deployment environment.
        options:
          - Development
          - Staging
          - Production
  workflow_call:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        configuration: [ Release ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        c_compiler: [gcc, clang, cl]
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        cpp_compiler: [g++, clang++, cl]
        # include:
        #   - os: windows-latest
        #     c_compiler: cl
        #     cpp_compiler: cl
        #   - os: ubuntu-latest
        #     c_compiler: gcc
        #     cpp_compiler: g++
        #   - os: ubuntu-latest
        #     c_compiler: clang
        #     cpp_compiler: clang++
        # exclude:
        #   - os: windows-latest
        #     c_compiler: gcc
        #   - os: windows-latest
        #     c_compiler: clang
        #   - os: ubuntu-latest
        #     c_compiler: cl

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}

